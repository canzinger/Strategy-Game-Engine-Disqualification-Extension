plugins {
    id 'java'
    id 'java-library'
    id 'idea'
    id "maven-publish"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'at.ac.tuwien.ifs.sge'
version '1.0.4-dq'

sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

dependencies {

    implementation("info.picocli:picocli:4.7.0")
    implementation("com.google.guava:guava:31.1-jre")
    testImplementation("junit:junit:4.13.2")
}

jar {
    manifest {
        attributes("Main-Class": "at.ac.tuwien.ifs.sge.engine.cli.SgeCommand")
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    archiveClassifier.set('exe')
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            pom {
                name = "sge"
                description = "The core engine library, needed to implement games and agents."
                licenses {
                    license {
                        name = "GNU Affero General Public License version 3"
                        url = "https://opensource.org/licenses/agpl-v3.html"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "entze"
                        name = "Lukas Grassauer"
                        email = "entze@grassauer.eu"
                    }
                }

                scm {
                    url = "https://github.com/Entze/strategy-game-engine"
                    connection = "https://github.com/Entze/strategy-game-engine.git"
                    developerConnection = "git@github.com:Entze/strategy-game-engine.git"
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Entze/Strategy-Game-Engine")
            credentials {
                username = project.findProperty("gpr.user") ?: findProperty("github.actor") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

test {
    useJUnit()
    maxHeapSize = '1G'
}
